# Project namespace
apiVersion: v1
kind: Namespace
metadata:
  name: prj-ci-test
---
# Postgres dependence
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: prj-ci-test
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_USER
              value: "user"
            - name: POSTGRES_PASSWORD
              value: "password"
          ports:
            - name: postgres
              containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: prj-ci-test
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
  clusterIP: None
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: controller
  namespace: prj-ci-test
  labels:
    app: controller
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "0.12.11"
spec:
  podSelector:
    matchLabels:
      app: controller
  policyTypes:
    - Ingress
    - Egress
  egress:
    # Kubernetes apiserver access
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 443
          protocol: TCP
        - port: 6443
          protocol: TCP
    # DNS egress
    - to:
        - podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
  ingress:
    # prometheus metrics scraping support
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - port: http
          protocol: TCP
---
# Scoped service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller
  labels:
    app: controller
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "0.12.11"
  namespace: prj-ci-test
automountServiceAccountToken: true
---
# Access for the service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: controller
rules:
  - apiGroups: ["demeter.run"]
    resources: ["dbsyncports", "dbsyncports/status", "dbsyncports/finalizers"]
    verbs: ["get", "list", "watch", "patch", "update"]
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["create"]
---
# Binding the role to the account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: controller
subjects:
  - kind: ServiceAccount
    namespace: prj-ci-test
    name: controller
roleRef:
  kind: ClusterRole
  name: controller
  apiGroup: rbac.authorization.k8s.io
---
# Run controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: prj-ci-test
  labels:
    app: controller
spec:
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      labels:
        app: controller
    spec:
      serviceAccountName: controller
      containers:
        - name: controller
          image: ext-cardano-dbsync:1.0
          ports:
            - containerPort: 80
          env:
            - name: ADDR
              value: "0.0.0.0:80"
            - name: DB_URL_MAINNET
              value: "postgres://user:password@app.prj-ci-test.svc.cluster.local:5432/postgres?sslmode=disable"
            - name: DB_URL_PREPROD
              value: "postgres://user:password@app.prj-ci-test.svc.cluster.local:5432/postgres?sslmode=disable"
            - name: DB_URL_PREVIEW
              value: "postgres://user:password@app.prj-ci-test.svc.cluster.local:5432/postgres?sslmode=disable"
            - name: METRICS_DELAY
              value: "30"
            - name: DCU_PER_SECOND_MAINNET
              value: "10"
            - name: DCU_PER_SECOND_PREPROD
              value: "10"
            - name: DCU_PER_SECOND_PREVIEW
              value: "10"
            - name: RUST_LOG
              value: info,kube=debug,controller=debug
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: prj-ci-test
  labels:
    app: controller
spec:
  selector:
    app: controller
  type: ClusterIP
  ports:
    - name: controller
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: demeter.run/v1
kind: DbSyncPort
metadata:
  name: ci-user
  namespace: prj-ci-test
spec:
  network: "preview"
